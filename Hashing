#include<bits/stdc++.h>
using namespace std;
#define BASE 37
#define MODE 1000000007
#define MAX_S 100000
long long h[MAX_S+5],po[MAX_S+5];
void generatePrefixHashing(string &s)
{
        h[0]=s[0]-'a'+1;
    for(int i=1;i<s.size();i++)
    {
       h[i]=((h[i-1] * BASE)+(s[i]-'a'+1)) % MODE;
    }
    po[0]=1;
    for(int i=1;i<=s.size();i++)
    {
        po[i]=(po[i-1]*BASE) % MODE;
    }
}
long long generateHash(string &s)
{
    long long H = 0;
    for (auto c : s)
    {
        H = (H * BASE) + (c - 'a' + 1) % MODE;
    }
    return H;
}
long long gethash(int L,int R)
{
    if(L == 0) return h[R];
    return (h[R]-(h[L - 1]*po[R - L + 1] % MODE) + MODE) % MODE;
}
int main()
{
    string s1,s2;
    cin>>s1>>s2;
    generatePrefixHashing(s1);
   long long hashOfS2 = generateHash(s2);
    for (int i = 0; i + s2.size() <= s1.size(); i++)
    {
        if (gethash(i, i + s2.size() - 1) == hashOfS2)
        {
            cout << i << "\n";
        }
    }

    return 0;
}
